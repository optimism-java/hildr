plugins {
    id 'java-library'
    id 'checkstyle'
    id "jacoco"
    id "com.diffplug.spotless" version "6.19.0"
    id "net.ltgt.errorprone" version "3.1.0"
}

group = 'io.optimism'
version = '0.1.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url "https://artifacts.consensys.net/public/teku/maven/"
    }
    maven {
        url "https://dl.cloudsmith.io/public/libp2p/jvm-libp2p/maven/"
    }
    maven {
        url "https://hyperledger.jfrog.io/artifactory/besu-maven/"
    }
    maven {
        url "https://artifacts.consensys.net/public/maven/maven/"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += "--enable-preview"
    options.compilerArgs += "-Xlint:preview"
    options.compilerArgs += ["--add-modules", "jdk.incubator.concurrent"]
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

tasks.withType(Test).configureEach {
    jvmArgs += "--enable-preview"
    jvmArgs += ["--add-modules", "jdk.incubator.concurrent"]
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += "--enable-preview"
    jvmArgs += ["--add-modules", "jdk.incubator.concurrent"]
}

dependencies {
    api 'com.google.guava:guava:31.1-jre'
    api 'com.github.rholder:guava-retrying:2.0.0'
    api 'org.apache.commons:commons-lang3:3.12.0'

    api("com.squareup.okhttp3:okhttp:5.0.0-alpha.2")
    api("com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2")
    api('org.web3j:core:4.9.8') {
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        exclude group: 'com.squareup.okhttp3', module: 'logging-interceptor'
    }

    api 'io.micrometer:micrometer-registry-prometheus:1.11.0'
    api platform('io.micrometer:micrometer-tracing-bom:1.1.1')
    api 'io.micrometer:micrometer-tracing'
    api 'io.micrometer:micrometer-tracing-bridge-otel'

    api platform("io.opentelemetry:opentelemetry-bom-alpha:1.26.0-alpha")
    api platform("io.opentelemetry:opentelemetry-bom:1.26.0")
    api 'io.opentelemetry:opentelemetry-api'
    api 'io.opentelemetry:opentelemetry-sdk'
    api 'io.opentelemetry:opentelemetry-sdk-logs'

    implementation 'ch.qos.logback:logback-core:1.4.7'
    implementation 'ch.qos.logback:logback-classic:1.4.7'
    implementation 'org.slf4j:slf4j-api:2.0.7'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    errorprone("com.google.errorprone:error_prone_core:2.18.0")
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = '10.10.0'
    configFile = project(":").file("config/checkstyle/google_checks.xml")
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    dependsOn test

    reports {
        csv.required = true
    }
}

jacocoTestCoverageVerification {

    violationRules {
        rule {
            limit {
                minimum = 0
            }
        }
    }
}