name: GraalVM Native Image

on:
  push:
    tags:
    - '*'
    paths-ignore:
      - LICENSE
      - '*.md'

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  releaseBuild: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  native-build-osx:
    name: GraalVM latest ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: [ '21.0.1' ]
        java-version: [ '21' ]
        os: [ macos-latest ]

    outputs:
      version: ${{ github.ref_name }}

    steps:
      - name: 🛎️ Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ☕ Setup GraalVM Build
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.version }}
          java-version: ${{ matrix.java-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          distribution: 'graalvm'
          cache: 'gradle'
          set-java-home: 'true'
          native-image-job-reports: 'true'

      - name: 🏗️ Native Image Build & Test
        id: native-build
        run: |
          ./gradlew nativeCompile
          mv hildr-node/build/native/nativeCompile/hildr-node hildr-node/build/native/nativeCompile/hildr-node-osx
          ls -ltrh hildr-node/build/native/nativeCompile/hildr-node-osx

      - name: 📤 Upload ${{ matrix.os }} native image
        uses: actions/upload-artifact@v3
        with:
          name: hildr-node-osx
          path: |
            hildr-node/build/native/nativeCompile/hildr-node-osx
          if-no-files-found: error

  native-build-windows:
    name: GraalVM latest ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: [ '21.0.1' ]
        java-version: [ '21' ]
        os: [ windows-latest ]

    outputs:
      version: ${{ github.ref_name }}

    steps:
      - name: 🛎️ Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ☕ Setup GraalVM Build
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.version }}
          java-version: ${{ matrix.java-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          distribution: 'graalvm'
          cache: 'gradle'
          set-java-home: 'true'
          native-image-job-reports: 'true'

      - name: 🏗️ Native Image Build & Test
        id: native-build
        run: |
          ./gradlew nativeCompile
          ls -ltrh hildr-node/build/native/nativeCompile/hildr-node.exe

      - name: 📤 Upload ${{ matrix.os }} native image
        uses: actions/upload-artifact@v3
        with:
          name: hildr-node-windows
          path: |
            hildr-node/build/native/nativeCompile/hildr-node.exe
          if-no-files-found: error

  native-build-linux:
    name: GraalVM latest ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: [ '21.0.1' ]
        java-version: [ '21' ]
        os: [ ubuntu-latest ]

    outputs:
      version: ${{ github.ref_name }}

    steps:
      - name: 🛎️ Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ☕ Setup GraalVM Build
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.version }}
          java-version: ${{ matrix.java-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          distribution: 'graalvm'
          cache: 'gradle'
          set-java-home: 'true'
          native-image-job-reports: 'true'

      - name: 🏗️ Native Image Build & Test
        id: native-build
        run: |
          ./gradlew buildBinary
          ls -ltrh hildr-node/build/binary/hildr-node

      - name: 📤 Upload ${{ matrix.os }} native image
        uses: actions/upload-artifact@v3
        with:
          name: hildr-node-linux
          path: |
            hildr-node/build/binary/hildr-node
            hildr-node/build/binary/hildr-node.jar
          if-no-files-found: error

  native-build-musl:
    name: GraalVM + musl static image
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ☕ Setup GraalVM Build
        uses: graalvm/setup-graalvm@v1
        with:
          version: '21.0.1'
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'
          native-image-musl: 'true'
          set-java-home: 'true'
          native-image-job-reports: 'true'

      - name: 🏗️ Build static image with musl libc
        id: native-build
        run: |
          ./gradlew buildBinaryStatic
          mv hildr-node/build/binary/hildr-node hildr-node/build/binary/hildr-node-static
          ls -ltrh hildr-node/build/binary/hildr-node-static

      - name: 📤 Upload static binary
        uses: actions/upload-artifact@v3
        with:
          name: hildr-node-static
          path: |
            hildr-node/build/binary/hildr-node-static
          if-no-files-found: error

  push_image_to_github:
    name: Push Docker image to Github
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./docker/jvm.dock
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    name: 🚰 Release new version.
    needs: [ native-build-osx, native-build-musl, native-build-linux, native-build-windows ]
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️Check out the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: ⚙️Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/config/configuration.json"
          commitMode: true
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ⏬Download all the build artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-artifacts

      - name: ✨Github Release (version = ${{ needs.native-build-osx.outputs.version }})
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          files: |
            ${{ github.workspace }}/release-artifacts/**
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}