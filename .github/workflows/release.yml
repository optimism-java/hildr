name: GraalVM Native Image

on:
  release:
    types: [created]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  releaseBuild: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-jar:
    name: GraalVM latest ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '21' ]
        os: [ ubuntu-latest ]

    outputs:
      version: ${{ github.ref_name }}

    steps:
      - name: üõéÔ∏è Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚òï Setup GraalVM Build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.java-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          distribution: 'graalvm'
          cache: 'gradle'
          set-java-home: 'true'

      - name: üèóÔ∏è Build Jar & Test
        id: build
        run: |
          ./gradlew buildJarForDocker

      - name: üì§ Upload ${{ matrix.os }} native image
        uses: actions/upload-artifact@v3
        with:
          name: hildr-jar
          path: |
            build/docker/hildr.jar
          if-no-files-found: error

  push_image_to_github:
    name: Push Docker image to Github
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=semver,pattern={{raw}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/node.dock
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  release:
    name: üö∞ Release new version.
    needs: [ push_image_to_github, build-jar ]
    runs-on: ubuntu-latest

    steps:
      - name: üõéÔ∏èCheck out the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: ‚öôÔ∏èBuild Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/config/configuration.json"
          commitMode: true
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚è¨Download all the build artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-artifacts

      - name: ‚ú®Github Release (version = ${{ needs.push_image_to_github.outputs.version }})
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          files: |
            ${{ github.workspace }}/release-artifacts/**
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}