[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.reflect.RecordComponent;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lorg.apache.logging.log4j.core.config.AppenderRef;"
  },
  {
    "name": "[Lorg.apache.logging.log4j.core.config.LoggerConfig;"
  },
  {
    "name": "[Lorg.apache.logging.log4j.core.config.Property;"
  },
  {
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "[[B"
  },
  {
    "name": "apple.security.AppleProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MDCConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.spi.ILoggingEvent",
    "methods": [
      {
        "name": "getFormattedMessage",
        "parameterTypes": []
      },
      {
        "name": "getLevel",
        "parameterTypes": []
      },
      {
        "name": "getLoggerName",
        "parameterTypes": []
      },
      {
        "name": "getThreadName",
        "parameterTypes": []
      },
      {
        "name": "getThrowableProxy",
        "parameterTypes": []
      },
      {
        "name": "getTimeStamp",
        "parameterTypes": []
      },
      {
        "name": "prepareForDeferredProcessing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.FileAppender",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.Encoder",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingFileAppender",
    "methods": [
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRollingPolicy",
        "parameterTypes": [
          "ch.qos.logback.core.rolling.RollingPolicy"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingPolicy",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingPolicyBase",
    "methods": [
      {
        "name": "setFileNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.FileAppender"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxHistory",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTotalSizeCap",
        "parameterTypes": [
          "ch.qos.logback.core.util.FileSize"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.util.FileSize",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.aayushatharva.brotli4j.Brotli4jLoader"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.common.util.concurrent.AbstractFuture",
    "fields": [
      {
        "name": "listeners"
      },
      {
        "name": "value"
      },
      {
        "name": "waiters"
      }
    ]
  },
  {
    "name": "com.google.common.util.concurrent.AbstractFuture$Waiter",
    "fields": [
      {
        "name": "next"
      },
      {
        "name": "thread"
      }
    ]
  },
  {
    "name": "com.google.protobuf.ExtensionRegistry",
    "methods": [
      {
        "name": "getEmptyRegistry",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.protobuf.MessageLite",
    "methods": [
      {
        "name": "getParserForType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsPrfGenerator$V12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "groovy.lang.Closure"
  },
  {
    "name": "io.jsonwebtoken.Claims",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.ClaimsMutator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.Header",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.JwsHeader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultClaims",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwsHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.JwtMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.libp2p.etc.util.P2PService$StreamHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.etc.util.netty.InboundTrafficLimitHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.etc.util.netty.NettyUtilKt$nettyInitializer$1"
  },
  {
    "name": "io.libp2p.etc.util.netty.SplitEncoder"
  },
  {
    "name": "io.libp2p.etc.util.netty.StringSuffixCodec"
  },
  {
    "name": "io.libp2p.etc.util.netty.TotalTimeoutHandler"
  },
  {
    "name": "io.libp2p.etc.util.netty.mux.AbstractMuxHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.etc.util.netty.protobuf.LimitedProtobufVarint32FrameDecoder"
  },
  {
    "name": "io.libp2p.multistream.Negotiator$GenericHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.multistream.Negotiator$RequesterHandler"
  },
  {
    "name": "io.libp2p.multistream.Negotiator$ResponderHandler"
  },
  {
    "name": "io.libp2p.multistream.ProtocolSelect",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.mux.MuxHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.mux.mplex.MplexFrameCodec",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.mux.mplex.MplexHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.protocol.ProtocolMessageHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.security.noise.NoiseIoHandshake",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.security.noise.NoiseXXCodec",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.libp2p.security.noise.UShortLengthCodec"
  },
  {
    "name": "io.libp2p.transport.implementation.ConnectionBuilder"
  },
  {
    "name": "io.micrometer.context.ContextRegistry"
  },
  {
    "name": "io.micrometer.context.ContextSnapshotFactory"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.channel.AbstractChannelHandlerContext",
    "fields": [
      {
        "name": "handlerState"
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundBuffer",
    "fields": [
      {
        "name": "totalPendingSize"
      },
      {
        "name": "unwritable"
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelConfig",
    "fields": [
      {
        "name": "autoRead"
      },
      {
        "name": "writeBufferWaterMark"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline",
    "fields": [
      {
        "name": "estimatorHandle"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.SimpleChannelInboundHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioDatagramChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioServerSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageCodec",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToByteEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageCodec",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.protobuf.ProtobufDecoder"
  },
  {
    "name": "io.netty.handler.codec.protobuf.ProtobufEncoder"
  },
  {
    "name": "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder"
  },
  {
    "name": "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender"
  },
  {
    "name": "io.netty.handler.codec.string.StringDecoder"
  },
  {
    "name": "io.netty.handler.codec.string.StringEncoder"
  },
  {
    "name": "io.netty.handler.logging.LoggingHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.IdleStateHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.ReadTimeoutHandler"
  },
  {
    "name": "io.netty.handler.timeout.WriteTimeoutHandler",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.traffic.AbstractTrafficShapingHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.traffic.ChannelTrafficShapingHandler"
  },
  {
    "name": "io.netty.resolver.dns.Cache$Entries",
    "fields": [
      {
        "name": "expirationFuture"
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap",
    "fields": [
      {
        "name": "attributes"
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
    "fields": [
      {
        "name": "attributeMap"
      }
    ]
  },
  {
    "name": "io.netty.util.Recycler$DefaultHandle",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.util.concurrent.DefaultPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "io.netty.util.concurrent.SingleThreadEventExecutor",
    "fields": [
      {
        "name": "state"
      },
      {
        "name": "threadProperties"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.opentelemetry.instrumentation.logback.mdc.v1_0.OpenTelemetryAppender",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.optimism.cli.Cli",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name":"io.optimism.cli.typeconverter.LogLevelConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name": "io.optimism.cli.typeconverter.SyncModeConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.common.AttributesDepositedCall",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.common.BlockInfo",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.common.Epoch",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.config.Config",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.config.Config$ChainConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.config.Config$CliConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.config.Config$SyncMode",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.config.Config$SystemAccounts",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.config.Config$SystemConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.Attributes$AttributesDeposited",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.Attributes$DepositedTransaction",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.Attributes$UserDeposited",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.BatcherTransactions$BatcherTransaction",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.BatcherTransactions$BatcherTransactionMessage",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.BatcherTransactions$Frame",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.Batches$Batch",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.derive.stages.Channels$Channel",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.driver.Driver$UnfinalizedBlock",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.driver.HeadInfo",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.EngineApi",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload$ExecutionPayloadReq",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload$ExecutionPayloadRes",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload$PayloadAttributes",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload$PayloadAttributes$EpochReq",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload$PayloadAttributes$PayloadAttributesReq",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload$PayloadStatus",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ExecutionPayload$Status",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ForkChoiceUpdate",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ForkChoiceUpdate$ForkChoiceUpdateRes",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.ForkChoiceUpdate$ForkchoiceState",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.OpEthExecutionPayload",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.OpEthExecutionPayload$ResponseDeserializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.optimism.engine.OpEthExecutionPayload$ExecutionPayloadObj",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.OpEthForkChoiceUpdate",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.engine.OpEthPayloadStatus",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.l1.L1Info",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.l1.L1Info$L1BlockInfo",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.utilities.telemetry.LazyInitRollingFileAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.utilities.derive.stages.Batch",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.utilities.derive.stages.Frame",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.vertx.core.eventbus.impl.EventBusImpl",
    "fields": [
      {
        "name": "inboundInterceptors"
      },
      {
        "name": "outboundInterceptors"
      }
    ]
  },
  {
    "name": "io.vertx.core.logging.SLF4JLogDelegateFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.servlet.Servlet"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Class",
    "methods": [
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Cloneable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "pid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Record",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Thread",
    "methods": [
      {
        "name": "isVirtual",
        "parameterTypes": []
      },
      {
        "name": "ofVirtual",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Thread$Builder",
    "methods": [
      {
        "name": "factory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Thread$Builder$OfVirtual"
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "fields": [
      {
        "name": "virtual"
      }
    ]
  },
  {
    "name": "java.lang.reflect.RecordComponent",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true,
    "methods": [
      {
        "name": "getAccessor",
        "parameterTypes": []
      },
      {
        "name": "getDeclaredAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getGenericType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketOption"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.StandardSocketOptions",
    "fields": [
      {
        "name": "IP_MULTICAST_IF"
      },
      {
        "name": "IP_MULTICAST_LOOP"
      },
      {
        "name": "IP_MULTICAST_TTL"
      }
    ]
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.nio.Bits",
    "methods": [
      {
        "name": "unaligned",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [
      {
        "name": "alignedSlice",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.NetworkChannel",
    "methods": [
      {
        "name": "getOption",
        "parameterTypes": [
          "java.net.SocketOption"
        ]
      },
      {
        "name": "setOption",
        "parameterTypes": [
          "java.net.SocketOption",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.spi.SelectorProvider",
    "methods": [
      {
        "name": "openServerSocketChannel",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      },
      {
        "name": "openSocketChannel",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "name": "java.nio.file.Path"
  },
  {
    "name": "java.nio.file.Paths",
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.MessageDigestSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.cert.PKIXRevocationChecker"
  },
  {
    "name": "java.security.interfaces.DSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.DSAPublicKey"
  },
  {
    "name": "java.security.interfaces.ECPrivateKey"
  },
  {
    "name": "java.security.interfaces.ECPublicKey"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.security.spec.DSAParameterSpec"
  },
  {
    "name": "java.sql.Connection"
  },
  {
    "name": "java.sql.Driver"
  },
  {
    "name": "java.sql.DriverManager",
    "methods": [
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Time",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Timestamp",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.Duration",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Instant",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalDate",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.MonthDay",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.OffsetDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.OffsetTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Period",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Year",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.YearMonth",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZoneId",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZoneOffset",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZonedDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.util.AbstractCollection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.AbstractList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ArrayList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Collection",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.List",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Map",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.RandomAccess",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ServiceLoader",
    "methods": [
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [
      {
        "name": "aux"
      },
      {
        "name": "status"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.servlet.Servlet"
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "java.util.concurrent.StructuredTaskScope",
    "fields": [
      {
        "name": "futures"
      }
    ]
  },
  {
    "name": "java.util.concurrent.StructuredTaskScope$ShutdownOnFailure",
    "fields": [
      {
        "name": "future"
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl"
  },
  {
    "name": "libcore.io.Memory"
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition$Constructor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition$Entry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "boolean",
          "boolean",
          "java.lang.String",
          "java.util.List",
          "java.util.List",
          "net.osslabz.evm.abi.definition.AbiDefinition$Entry$Type",
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition$Entry$Component",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition$Entry$Param",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "net.osslabz.evm.abi.definition.SolidityType"
        ]
      }
    ]
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition$Entry$Type",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition$Function",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.osslabz.evm.abi.definition.AbiDefinition$ParamSanitizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.osslabz.evm.abi.definition.SolidityType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AppenderSet",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AsyncAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.ConsoleAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.CountingNoOpAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FailoverAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FailoversPlugin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FileAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.HttpAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.NullAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.OutputStreamAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RandomAccessFileAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RollingFileAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.ScriptAppenderSelector",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SmtpAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SocketAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SyslogAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.WriterAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.ColumnMapping",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.JmsAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.DeleteAction",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAll",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAny",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfFileName",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfLastModified",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfNot",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.Route",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.Routes",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.RoutingAppender",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncLoggerConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncWaitStrategyFactoryConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.async.LinkedTransferQueueFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppenderControlArraySet",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppenderRef",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppendersPlugin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.CustomLevelConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.CustomLevels",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.DefaultAdvertiser",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.HttpWatcher",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig$RootLogger",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig$RootLogger$Builder",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggersPlugin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.PropertiesPlugin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.Property",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.ScriptsPlugin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.ClassArbiter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.DefaultArbiter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.ScriptArbiter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.SelectArbiter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.arbiters.SystemPropertyArbiter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.json.JsonConfigurationFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.visitors.PluginConfigurationVisitor",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.visitors.PluginElementVisitor",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.BurstFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.CompositeFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.DenyAllFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.DynamicThresholdFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.LevelMatchFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.LevelRangeFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MapFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MarkerFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MutableThreadContextMapFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.NoMarkerFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.RegexFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ScriptFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.StringMatchFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.StructuredDataFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ThreadContextMapFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ThresholdFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.TimeFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.ContextSelectorAdmin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.ContextSelectorAdminMBean",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerConfigAdmin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerConfigAdminMBean",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerContextAdmin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerContextAdminMBean",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.StatusLoggerAdmin",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.StatusLoggerAdminMBean",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.CsvLogEventLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.CsvParameterLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.GelfLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.HtmlLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.JsonLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.LevelPatternSelector",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.LoggerFields",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.MarkerPatternSelector",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.MessageLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.PatternLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.PatternMatch",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.Rfc5424Layout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.ScriptPatternSelector",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.SerializedLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.SyslogLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.XmlLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.YamlLayout",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.ContextMapLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.DateLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.EnvironmentLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.EventLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JavaLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JndiLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.Log4jLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.LowerLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MainMapLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MapLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MarkerLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.StructuredDataLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.UpperLookup",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.net.MulticastDnsAdvertiser",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketAddress",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketOptions",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketPerformancePreferences",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.SslConfiguration",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ClassNamePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.DatePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EncodingPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EqualsReplacementConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FileDatePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FileLocationPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FullLocationPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.HighlightConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.IntegerPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LevelPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LineLocationPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LoggerPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MapPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MarkerPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MaxLengthConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MdcPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MessagePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.NanoTimePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.NdcPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RegexReplacement",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RegexReplacementConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RepeatPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.StyleConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThrowablePatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.UuidPatternConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.script.Script",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.script.ScriptFile",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.script.ScriptRef",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.core.util.KeyValuePair",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.message.ReusableMessageFactory",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.spi.Provider",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.log4j.util.internal.DefaultObjectInputFilter",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JLoggerContextFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.asn1.sec.SECNamedCurves",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDSA",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Keccak$Digest256",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Digest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "org.ethereum.beacon.discovery.network.DatagramToEnvelope"
  },
  {
    "name": "org.ethereum.beacon.discovery.network.IncomingMessageSink",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.ethereum.beacon.discovery.network.NettyDiscoveryServerImpl$1"
  },
  {
    "name": "org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "org.jctools.queues.MpUnboundedXaddArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerChunk"
      },
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "org.jctools.queues.MpUnboundedXaddArrayQueueProducerChunk",
    "fields": [
      {
        "name": "producerChunk"
      },
      {
        "name": "producerChunkIndex"
      }
    ]
  },
  {
    "name": "org.jctools.queues.MpUnboundedXaddArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "org.jctools.queues.MpUnboundedXaddChunk",
    "fields": [
      {
        "name": "index"
      },
      {
        "name": "next"
      },
      {
        "name": "prev"
      }
    ]
  },
  {
    "name": "org.jctools.queues.SpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "org.jctools.queues.SpscArrayQueueProducerIndexFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "org.osgi.framework.FrameworkUtil"
  },
  {
    "name": "org.robolectric.Robolectric"
  },
  {
    "name": "org.slf4j.helpers.Log4jLoggerFactory"
  },
  {
    "name": "org.web3j.abi.datatypes.Address"
  },
  {
    "name": "org.web3j.abi.datatypes.Bytes"
  },
  {
    "name": "org.web3j.abi.datatypes.generated.Uint256"
  },
  {
    "name": "org.web3j.abi.datatypes.generated.Uint8"
  },
  {
    "name": "org.web3j.protocol.core.DefaultBlockParameter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.web3j.protocol.core.DefaultBlockParameterNumber",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.Request",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getJsonrpc",
        "parameterTypes": []
      },
      {
        "name": "getMethod",
        "parameterTypes": []
      },
      {
        "name": "getParams",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.Response",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setJsonrpc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.Response$Error",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.request.EthFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getBlockHash",
        "parameterTypes": []
      },
      {
        "name": "getFromBlock",
        "parameterTypes": []
      },
      {
        "name": "getToBlock",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.request.Filter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getTopics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.request.Filter$FilterTopic",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.web3j.protocol.core.methods.request.Filter$SingleTopic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.response.AccessListObject",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock$Block",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock$ResponseDeserialiser",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock$ResultTransactionDeserialiser",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock$TransactionHash",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock$TransactionObject",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock$TransactionResult",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlockNumber",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthChainId",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthLog",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthLog$LogObject",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthLog$LogResult",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthLog$LogResultDeserialiser",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.Log",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.Transaction",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.deserializer.KeepAsJsonDeserialzier",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "picocli.CommandLine$AutoHelpMixin",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.core.publisher.FluxCreate$BaseSink",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.core.publisher.FluxCreate$SerializedFluxSink",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.core.publisher.FluxReplay$ReplaySubscriber",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.core.publisher.LambdaSubscriber",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.core.publisher.ReplayProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.core.publisher.ReplayProcessor$ReplayInner",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.util.concurrent.MpscLinkedQueue",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.misc.SharedSecrets",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.misc.Unsafe",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.misc.VM",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.DSAKeyFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.DSAParameters",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.SHA",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.X509Factory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.util.ObjectIdentifier",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.CertificateExtensions",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "tech.pegasys.teku.networking.p2p.libp2p.Firewall",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "tech.pegasys.teku.networking.p2p.libp2p.Firewall$FirewallExceptionHandler",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "tech.pegasys.teku.networking.p2p.libp2p.MplexFirewall$MplexFirewallHandler",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "tech.pegasys.teku.networking.p2p.libp2p.MuxFirewall$MuxFirewallHandler",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "io.optimism.utilities.derive.stages.Batch",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "io.optimism.utilities.derive.stages.Frame",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthSubscribe",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.websocket.events.NewHeadsNotification",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.websocket.events.Notification",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.websocket.events.Notification",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.websocket.events.NewHead",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.core.methods.response.EthBlock$Withdrawal",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "org.web3j.protocol.websocket.events.NotificationParams",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "io.optimism.network.BlockVersion",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "tech.pegasys.teku.networking.p2p.gossip.TopicHandler",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.network.NamedTopicHandler",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.network.AbstractTopicHandler",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.network.BlockV1TopicHandler",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.network.BlockV2TopicHandler",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.network.BlockV3TopicHandler",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.network.OpStackP2PNetwork",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.utilities.rpc.response.BeaconApiResponse",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.type.SpecConfig",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.type.BlobSidecar",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.type.BeaconSignedBlockHeader",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  },
  {
    "name": "io.optimism.type.BeaconBlockHeader",
    "allDeclaredClasses": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "allPublicClasses": true
  }
]